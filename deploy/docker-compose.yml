# deploy/docker-compose.yml

# Feel free to use this:
# https://dev.to/frankalvarez/dockerize-a-license-11-app-4g4a

version: '3.9'

services:
  license:
    restart: unless-stopped
    container_name: fantomls
    build:
      context: ../
      dockerfile: ./deploy/Dockerfile
    volumes:
      - license_app:/var/www/fantom-ls/storage/app
#      - fantom-license-cc_license_cc:/content
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: license-database
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
        - "8001:80"
    networks:
        -   n-license
    depends_on:
      license-database:
        condition: service_healthy

  license-database:
      restart: unless-stopped
      image: mariadb:latest
      environment:
        MARIADB_DATABASE: ${DB_DATABASE}
        MARIADB_USER: ${DB_USERNAME}
        MARIADB_PASSWORD: ${DB_PASSWORD}
        MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        MARIADB_AUTO_UPGRADE: 1
      volumes:
          - license_database:/var/lib/mysql
      healthcheck:
#        test: ['CMD', 'mariadb', '${DB_DATABASE}', '-h', 'localhost', '--password=${DB_PASSWORD}', '-u', '${DB_USERNAME}']
        test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
        timeout: 20s
        retries: 10
      networks:
        -   n-license
#      ports:
#        - "3306:3306"
#      extra_hosts:
#        - "host.docker.internal:host-gateway"
volumes:
  license_app: {}
  license_database: {}
#  fantom-license-cc_license_cc:
#    external: true

networks:
  n-license:
    driver: bridge
